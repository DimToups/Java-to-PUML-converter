@startuml
'https://plantuml.com/class-diagram
skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold

hide empty members

package western{
class Boisson{
	+ <<create>> Boisson(nom : String, genre : Genre)
	+ getNom() : String
	+ getGenre() : Genre
	+ getNomAvecArticleIndefini() : String
	+ getNomAvecArticlePartitif() : String
	+ getNomAvecArticleDefini() : String
	+ getNomAvecPreposition(preposition : String) : String
}

class Brigand{
	# LOOK_PAR_DEFAUT : String {static}
	- look : String
	- recompense : int
	- estLibre : boolean
	+ <<create>> Brigand(nom : String)
	+ <<create>> Brigand(nom : String, boisson : Boisson)
	+ <<create>> Brigand(nom : String, boisson : Boisson, look : String)
	+ getLook() : String
	+ getRecompense() : int
	+ estLibre() : boolean
	+ kidnapper(dame : Dame)
	+ seFaireCapturer(cowBoy : Cowboy)
	+ seFaireTirerDessus(cowBoy : Cowboy)
	+ getPseudo() : String
	+ getCaptives() : Dame *
	+ sePresenter()
	+ getBoissonParDefaut() {static} : Boisson
	+ setBoissonParDefaut(boisson : Boisson) {static}
}

class Cowboy{
	- gains : int
	+ <<create>> Cowboy(nom : String)
	+ <<create>> Cowboy(nom : String, boisson : Boisson)
	+ getPseudo() : String
	+ liberer(dame : Dame)
	+ liberer(captives : Dame *)
	+ capturer(horsLaLoi : HorsLaLoi)
	+ tirerSur(brigand : HorsLaLoi)
	+ sePresenter()
	+ getBoissonParDefaut() {static} : Boisson
	+ setBoissonParDefaut(boisson : Boisson) {static}
}

class Dame{
	- estLibre : boolean
	+ <<create>> Dame(nom : String)
	+ <<create>> Dame(nom : String, boisson : Boisson)
	+ getPseudo() : String
	+ seFaireKidnapper(horsLaLoi : HorsLaLoi)
	+ seFaireLiberer(cowBoy : Cowboy)
	+ estLibre() : boolean
	+ sePresenter()
	+ getBoissonParDefaut() {static} : Boisson
	+ setBoissonParDefaut(boisson : Boisson) {static}
	+ getRavisseur() : HorsLaLoi
}

class Genre{
	FEMININ
	MASCULIN
}

class Histoire4{
	+ <<create>> Histoire4()
	+ main(args : String[]) {static}
}

interface HorsLaLoi<<interface>>{
	+ estLibre() {abstract} : boolean
	+ getRecompense() {abstract} : int
	+ kidnapper(dame : Dame, dame : Dame) {abstract}
	+ seFaireCapturer(cowBoy : Cowboy, cowBoy : Cowboy) {abstract}
	+ seFaireTirerDessus(cowBoy : Cowboy, cowBoy : Cowboy) {abstract}
	+ getLook() {abstract} : String
	+ getCaptives() {abstract} : Dame *
}

class Narrateur{
	+ <<create>> Narrateur()
	+ <<create>> Narrateur(nom : String)
	+ dire(texte : String)
	+ boire(boisson : Boisson)
	+ boire()
	+ getPseudo() : String
}

interface Nommable<<interface>>{
	+ getNom() {abstract} : String
	+ getPseudo() {abstract} : String
}

class Personnage{
	- nom : String
	+ <<create>> Personnage(nom : String)
	+ <<create>> Personnage(nom : String, boisson : Boisson)
	+ dire(texte : String)
	+ sePresenter()
	+ boire(boisson : Boisson)
	+ boire()
	+ getNom() : String
	+ getBoisson() : Boisson
	+ getPseudos(personnages : Nommable *) {static} : String
	+ getBoissonParDefaut() {static} : Boisson
}

class Ripou{
	+ <<create>> Ripou(nom : String)
	+ <<create>> Ripou(nom : String, boisson : Boisson)
	+ <<create>> Ripou(nom : String, boisson : Boisson, look : String)
	+ getLook() : String
	+ estLibre() : boolean
	+ getRecompense() : int
	+ kidnapper(dame : Dame)
	+ getCaptives() : Dame *
	+ seFaireCapturer(cowBoy : Cowboy)
	+ seFaireTirerDessus(cowBoy : Cowboy)
	+ getPseudo() : String
	+ sePresenter()
	+ liberer(dame : Dame)
}

class Substantif{
	- nom : String
	+ <<create>> Substantif(nom : String, genre : Genre)
	+ getNom() : String
	+ getGenre() : Genre
	+ toString() : String
	+ isVowel(c : char) {static} : boolean
	+ startsWithVowel(s : String) {static} : boolean
	+ getArticleIndefini() : String
	+ avecArticleIndefini() : String
	+ getArticleDefini(genre : Genre) {static} : String
	+ getArticleDefini() : String
	+ avecArticleDefini() : String
	+ faireElision(article : String) {static} : String
	+ elision() : boolean
	+ getArticlePartitif() : String
	+ avecArticlePartitif() : String
	+ avecElision(article : String) : String
	+ avecPreposition(preposition : String) : String
}


'@PumlAggregationBoisson "1" o---> "1\n - substantif" Substantif

'@PumlAggregationBoisson "1" o-> "1\n + EAU" Boisson
Boisson --> Genre : <<uses>>

'@PumlAggregationBrigand "1" o-> "*\n - captives" Dame

'@PumlAggregationBrigand "1" o--> "1\n - gardien" Cowboy

'@PumlAggregationBrigand "1" o-> "1\n - boissonParDefaut" Boisson
Brigand -|> Personnage
Brigand .|> HorsLaLoi

'@PumlAggregationCowboy "1" o-> "*\n - captures" HorsLaLoi

'@PumlAggregationCowboy "1" o-> "1\n - boissonParDefaut" Boisson
Cowboy -|> Personnage

'@PumlAggregationDame "1" o---> "1\n - sauveur" Cowboy

'@PumlAggregationDame "1" o-> "1\n - ravisseur" HorsLaLoi

'@PumlAggregationDame "1" o-> "1\n - boissonParDefaut" Boisson
Dame -|> Personnage
HorsLaLoi ...|> Nommable
Narrateur -|> Personnage
Narrateur -> Boisson : <<uses>>

'@PumlAggregationPersonnage "1" o-> "1\n - BOISSON_PAR_DEFAUT" Boisson
Personnage ...|> Nommable

'@PumlAggregationRipou "1" o-> "1\n - brigand" Brigand
Ripou --|> Cowboy
Ripou .|> HorsLaLoi
Ripou -> Boisson : <<uses>>
Ripou -> Dame : <<uses>>

'@PumlAggregationSubstantif "1" o-> "1\n - genre" Genre

}
@enduml