@startuml
'https://plantuml.com/class-diagram

skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold

hide empty members

class Java2Puml{
    + main(args : String[]) {static}
}
class PumlDoclet{
    - name : String
    - directory : String
    + init(locale : Locale, reporter : Reporter)
    + getName() : String
    + getSupportedOptions() : Option *
    + getSupportedVersion() : SourceVersion
    + run(docletEnvironment : DocletEnvironment) : Boolean
}
class PumlDiagram{
    - name : String
    - directory : String
    - docletEnvironment : DocletEnvironment
    + <<create>> PumlDiagram(name: String, directory : String, docletEnvironment : DocletEnvironment)
    + chercherClasses()
    + chercherLiaisons()
    - findClass(element : Element) : ClassContent
    + genererDiagramme()
    - createFile()
    - initFile()
    - endFile()
}
class ClassContent{
    - className : String
    - classType : ElementKind
    + <<create>> ClassContent()
    + setClass(element : Element)
    + genererContenuClasse() : String
    + getNom() : String
    + getType() : ElementKind
}
class Attribut{
    - nom : String
    - type : PrimitiveType
    + <<create>> Attribut(nom : String)
    + getNom() : String
    + getType() : PrimitiveType
    + getVisibilite() : Visibilite
}
class Methode{
    - nom : String
    - type : PrimitiveType
    + <<create>> Attribut(nom : String)
    + getNom() : String
    + getType() : PrimitiveType
    + getVisibilite() : Visibilite
}
class Liaison{
    + <<create>> Liaison(element1 : ClassContent, element2 : ClassContent)
    + <<create>> Liaison(element1 : ClassContent, element2 : ClassContent, typeLiaison : TypeLiaison)
    + genererLiaison() : String
}
enum TypeLiaison <<enum>>{
    HERITAGE
    SIMPLE
    IMPLEMENT
    AGREGATION
    COMPOSITION
}
enum Visibilite <<enum>>{
    PUBLIC
    PARTIAL
    PRIVATE
}

Java2Puml *-> PumlDoclet : > exécute le doclet
PumlDoclet o-> PumlDiagram : > génère le diagramme à l'aide de
PumlDiagram "1" o-> "*\n- classes" ClassContent : Stocke le contenu des classes\n >
PumlDiagram "1" o--> "*\n- liaisons" Liaison : Stocke les liaisons entre les classes\n >
ClassContent "1" *--> "*\n- classAttributs" Attribut : Liste les attributs de\n >
ClassContent "1" *--> "*\n- classMethods" Methode : Liste les méthodes de\n >
Attribut "1" *--> "1\n- visibilite" Visibilite : indique la visibilité\n >
Methode "1" *--> "1\n- visibilite" Visibilite : indique la visibilité\n >
Liaison "1" o-> "2\n- element1\nelement2" ClassContent : Informe de la liaison entre\n >
Liaison "1" *--> "1\n- typeLiaison" TypeLiaison : Indique le type de liaison\n >

@enduml